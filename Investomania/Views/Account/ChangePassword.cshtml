@using Investomania.Models
@model LoginViewModel
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";

}

<link href="~/SiteStyle/FrontEnd/Css/main.css" rel="stylesheet" />
<div class="limiter">
    <div class="container-login100" style="background-image: url('../../SiteStyle/FrontEnd/Images/033.jpg');">
        <div class="wrap-login100">
            <form class="login100-form validate-form">
                <span class="login100-form-logo">
                    <i class="fas fa-user-alt"></i>
                </span>

                <span class="login100-form-title p-b-34 p-t-27">
                   Change Passord
                </span>



                <div class="wrap-input100 validate-input" data-validate="Enter old password">
                    <input class="input100" type="password" name="oldpass" placeholder="Enter old password">
                    <span class="focus-input100 passwordIcon" data-placeholder=""></span>
                </div>

                <div class="wrap-input100 validate-input" data-validate="Enter new password">
                    <input class="input100" type="password" name="newpass" placeholder="Enter new password">
                    <span class="focus-input100 passwordIcon" data-placeholder=""></span>
                </div>

                <div class="wrap-input100 validate-input" data-validate="confirm new password">
                    <input class="input100" type="password" name="confirmpass" placeholder="confirm new password">
                    <span class="focus-input100 passwordIcon" data-placeholder=""></span>
                </div>



                <div class="container-login100-form-btn">
                    <button class="login100-form-btn">
                       Save
                    </button>
                </div>

            </form>
        </div>
    </div>
</div>
<script>

    (function ($) {
        "use strict";


        /*==================================================================
        [ Focus input ]*/
        $('.input100').each(function () {
            $(this).on('blur', function () {
                if ($(this).val().trim() != "") {
                    $(this).addClass('has-val');
                }
                else {
                    $(this).removeClass('has-val');
                }
            })
        })


        /*==================================================================
        [ Validate ]*/
        var input = $('.validate-input .input100');

        $('.validate-form').on('submit', function () {
            var check = true;

            for (var i = 0; i < input.length; i++) {
                if (validate(input[i]) == false) {
                    showValidate(input[i]);
                    check = false;
                }
            }

            return check;
        });


        $('.validate-form .input100').each(function () {
            $(this).focus(function () {
                hideValidate(this);
            });
        });


        /*==================================================================
        [ Show pass ]*/
        var showPass = 0;
        $('.btn-show-pass').on('click', function () {
            if (showPass == 0) {
                $(this).next('input').attr('type', 'text');
                $(this).addClass('active');
                showPass = 1;
            }
            else {
                $(this).next('input').attr('type', 'password');
                $(this).removeClass('active');
                showPass = 0;
            }

        });


    })(jQuery);
</script>
